#!/bin/sh
#
prog=addmovie
usage="$prog [-s spf] [-f first_frame] [-n frame_count] title i1 i2 ..."
#
#	Add a movie named "name" to our catalog.  It consists of one or
#	more video files found relative to the current directory, and
#	concatentated together.
#
#	files, each of which may have additional information in a .data file.
#	All are processed into the catalog directory, if forced or the catalog
#	entry is missing or older.
#
#	-f	force rebuild of given movies

WEB_CATALOG=/r/media/slowmovies/catalog

WRKDIR=${WRKDIR:-${TMPDIR}/${prog}}
mkdir -p $WRKDIR        || exit 100
#trap "rm -rf $WRKDIR" EXIT

spf=10
start=0
count=all

while [ $# -gt 0 ]
do
	case "$1" in
	-s)	shift; spf=$1; shift;;
	-f)	shift; start=$1; shift;;
	-n)	shift; count=$1; shift;;
	-*)	echo "$usage" 1>&2
		exit 1;;
	*)	break
	esac
done

if [ $# -lt 2]
then
	echo "$usage" 1>&2
	exit 1
fi

title="$1";	shift

inputlist=""
while [ $# -gt 0 ]
do
	inputlist="$inputlist -i $1"
done

cataloged_video="$WEB_CATALOG/$title"
if [ ! -f "$catalog" -o \
		"$srcpath" -nt "$cataloged_video" -o \
		"$data" -nt "$cataloged_video" -o \
		-n "$force" ]
	then
		echo "$prog: adding video $srcname" 1>&2

if true # [ ! -d $WRKDIR/$name/frames ]	# debug
then
		rm -rf "$WRKDIR/$name"
		mkdir -p "$WRKDIR/$name/frames"

		ffmpeg $inputlist -q:v 2 -v 16 -huffman optimal \
			$WRKDIR/$name/frames/%09d.jpeg
else
	echo "$prog:  DEBUG: skipping movie breakout" 1>&2
fi
	else
		echo "$prog: $srcname up to date, skipping" 1>&2
		continue
	fi

	title="$name"
	first=0
	spf=10
	count=all
	if [ -s "$data" ]
	then
		while read line
		do
			trimmed=`echo "$line" | sed 's/[ 	]*#.*$//'`
			field=`echo "$trimmed" | cut -f1`
			value=`echo "$trimmed" | sed 's/^[^ 	]*[	 ]*//'`
			case "$field" in
			title)	title="$value";;
			first)	first=$value;;
			spf)	spf=$value;;
			count)	count=$value;;
			*)
				echo "$prog: unknown data field: $field	$value" 1>&2
			esac
		done  <$data
	fi

	origsize=`du -sh $srcpath | awk '{print $1}'`
	cachesize=`du -sh $WRKDIR/$name | awk '{print $1}'`
	cachecount=`ls | wc -l`
	echo "$prog:   $name	$origsize  $cachesize	$cachecount" 1>&2
	echo "$prog:   		starting at $first, $count frames" 1>&2

	rm -rf $cataloged_video
	mkdir -p $cataloged_video/frames	|| exit 10
	rm -f $cataloged_video/updated

	# strip leading frames, if desired
	if [ $first -gt 0 ]
	then
		ls $WRKDIR/$name/frames/* | sed -n "1,${first}p" |
		while read fn
		do
			rm -f $fn
		done
	fi
	updated=`date +%s`
	echo $updated >$cataloged_video/updated

	i=0
	ls $WRKDIR/$name/frames/* |
	while read frame
	do
		cp $frame $cataloged_video/frames
		i=`expr $i + 1`
		if [ "$count" != "all" ]
		then
			if [ -a $i -ge $count ]
			then
				break
			fi
		fi
	done

	(cd $cataloged_video;
		tar cf frames.tar frames/*
		(	echo "updated	$updated"
			echo "title	$title"
			echo "spf	$spf"
		) >info
	)

	echo "$prog:	$name	`ls $WRKDIR/$name/frames | wc -l` frames" 1>&2

	# generate new catalog index
	(cd $WEB_CATALOG;
		for i in *
		do
			echo "$i	`cat $i/updated`"
		done >../index
	)
done
