#!/bin/sh
#
prog=build_opencv
usage=$prog
#
#	Sets up my development environment in user 'ches' on the pi.  Not
#	needed for just running slowmovies on the device.

if true # [ ! -d /usr/include/opencv ]
then
	# doesn't have highgui:
	# this doesn't work, which is why we have to build the source
	#sudo apt-get install -y libopencv-dev python-opencv # libopencv2-highgui-dev

	if [ ! -d $HOME/src/opencv ]
	then
		# Build tools:
		sudo apt-get install -y build-essential cmake

		# GUI:
		sudo apt-get install -y qt5-default libvtk6-dev

		# Media I/O:
		sudo apt-get install -y zlib1g-dev libjpeg-dev libwebp-dev libpng-dev libtiff5-dev libjasper-dev libopenexr-dev libgdal-dev

		# Video I/O:
		sudo apt-get install -y libdc1394-22-dev libavcodec-dev libavformat-dev libswscale-dev libtheora-dev libvorbis-dev libxvidcore-dev libx264-dev yasm libopencore-amrnb-dev libopencore-amrwb-dev libv4l-dev libxine2-dev

		# Parallelism and linear algebra libraries:
		sudo apt-get install -y libtbb-dev libeigen3-dev

		# Python:
		#sudo apt-get install -y python-dev python-tk python-numpy python3-dev python3-tk python3-numpy

		# Java:
		#sudo apt-get install -y ant default-jdk

		# Documentation:
		#sudo apt-get install -y doxygen

		sudo apt-get install -y unzip wget

		cd $HOME/src
		git clone https://github.com/opencv/opencv.git
	else
		cd $HOME/src/opencv	|| exit 10
		git pull
	fi

	mkdir -p $HOME/src/opencv/build 2>/dev/null
	cd $HOME/src/opencv/build

	# cmake -DWITH_QT=ON -DWITH_OPENGL=ON -DFORCE_VTK=ON -DWITH_TBB=ON -DWITH_GDAL=ON -DWITH_XINE=ON -DBUILD_EXAMPLES=ON ..

	cmake -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTS=OFF \
		-DBUILD_opencv_apps=OFF -dBUILD_DOCS=OFF \
		-DBUILD_PERF_TESTS=OFF -DBUILD_FAT_JAVA_LIB=OFF \
		-DBUILD_TESTS=OFF -DBUILD_WITH_STATIC_CRT=ON .. &&
		make &&
		sudo make install &&
		sudo ldconfig
fi

