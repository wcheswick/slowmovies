#!/bin/sh
#
prog=buildslowmovies
usage=$prog
#
#	Builds everything one needs on an RPi machine.  The result
#	is a useful disk image to duplicate the system.  It is best to
# 	expand the root file system afterwards.

mkdir -p bin lib/slow_movies src/TARS 2>/dev/null

if ! grep /usr/local/netpbm/bin $HOME/.profile >/dev/null
then
	echo 'PATH=$PATH:/usr/local/netpbm/bin;	export PATH' >>$HOME/.profile
fi

. $HOME/.profile
hash -r

# install software I use for development.

if ! which jove >/dev/null
then
	sudo apt-get install jove
fi


if ! which sam >/dev/null
then

	if [ ! -d src/plan9port ]
	then
		(cd src; git clone https://github.com/9fans/plan9port.git)
	fi

	echo "$prog:	building plan9 unix tools, this will take a while" 1>&2

	sudo apt-get install libx11-dev libxt-dev libxext-dev

	(cd src/plan9port; ./INSTALL)
	(	echo 'PLAN9=/home/pi/src/plan9port; export PLAN9'
		echo 'PATH=$PATH:$PLAN9/bin;	export PATH'
	) >>$HOME/.profile
fi

# Needed for the movie program

if ! which display >/dev/null
then
	sudo apt-get install -y imagemagick
fi

if ! which pnmscale >/dev/null
then
    	# we go through this silly source build because pamscale/pnmscale are
	# not delivered reliably on Linux.

	pbmdir=`ls -d src/netpbm* | sed 1q`
	if [ ! "$pbmdir" ]
	then
		if [ ! -s src/TARS/netpbm.tgz ]
		then
                    	echo "$prog:	fetching netpbm, with pnmscale" 1>&2
			curl -L https://sourceforge.net/projects/netpbm/files/latest/download >src/T!
		fi

		(cd src; tar zxf TARS/netpbm.tgz)	|| exit 1
		pbmdir=`ls -d src/netpbm* | sed 1q`
	fi
	if [ ! "$pbmdir" ]
	then
		echo "$prog:	can not find netpbm" 1>&2
		exit 2
	fi

	if [ ! -s /usr/include/jpeglib.h ]
	then
		sudo apt-get install -y libjpeg-dev
	fi

	if [ ! -s /usr/include/arm-linux-gnueabihf/tiffio.h ]
	then
		sudo apt-get install -y libtiff-dev
	fi

	if [ ! -s src/netpbm*/editor/pnmscale ]
	then
		echo "$prog: building netpbm.  Hit RETURN for each of the stupid questions." 1>&2
		(cd $pbmdir
			make LEX=""
		)
	fi

	(cd $pbmdir
		rm -rf /tmp/netpbm
		make LEX="" package pkgdir=/tmp/netpbm	|| exit 21
		echo "$prog:	again, hit ENTER as needed" 1>&2
		sudo ./installnetpbm		|| exit 22
		sudo ldconfig /usr/local/netpbm/lib
	)	|| exit 23
fi

if [ ! -s src/TARS/surfside.tar ]
then
	echo "$prog: fetching slowmovie code" 1>&2
	curl "http://www.cheswick.com/ches/surfside.tar" >src/TARS/surfside.tar

	mkdir -p src/surfside 2>/dev/null
	(cd src; tar xf TARS/surfside.tar)	|| exit 3
fi

echo "$prog:	installing prereqs" 1>&2

apt-get install -y libcv-dev
exit 13

if [ ! -d /usr/include/opencv ]
then
	# doesn't have highgui:
	#sudo apt-get install -y libopencv-dev python-opencv # libopencv2-highgui-dev

	# Build tools:
	sudo apt-get install -y build-essential cmake

	# GUI:
	sudo apt-get install -y qt5-default libvtk6-dev

	# Media I/O:
	sudo apt-get install -y zlib1g-dev libjpeg-dev libwebp-dev libpng-dev libtiff5-dev libjasper-dev libopenexr-dev libgdal-dev

	# Video I/O:
	sudo apt-get install -y libdc1394-22-dev libavcodec-dev libavformat-dev libswscale-dev libtheora-dev libvorbis-dev libxvidcore-dev libx264-dev yasm libopencore-amrnb-dev libopencore-amrwb-dev libv4l-dev libxine2-dev

	# Parallelism and linear algebra libraries:
	sudo apt-get install -y libtbb-dev libeigen3-dev

	# Python:
	#sudo apt-get install -y python-dev python-tk python-numpy python3-dev python3-tk python3-numpy

	# Java:
	#sudo apt-get install -y ant default-jdk

	# Documentation:
	#sudo apt-get install -y doxygen


# INSTALL THE LIBRARY (YOU CAN CHANGE '3.0.0' FOR THE LAST STABLE VERSION)

	sudo apt-get install -y unzip wget

	if [ ! -s src/TARS/opencv.tar ]
	then
		curl -L https://github.com/Itseez/opencv/archive/3.0.0.zip >src/TARS/opencv.tar
	fi

	if [ ! -d src/OpenCV ]
	then
		(cd src 
			unzip TARS/opencv.tar	|| exit 33
			mv opencv-3.0.0 OpenCV	|| exit 34
			cd OpenCV
			mkdir -p build 2>/dev/null
			cd build
			# cmake -DWITH_QT=ON -DWITH_OPENGL=ON -DFORCE_VTK=ON -DWITH_TBB=ON -DWITH_GDAL=ON -DWITH_XINE=ON -DBUILD_EXAMPLES=ON ..
			cmake ..
			make			|| exit 30
			sudo make install	|| exit 31
			sudo ldconfig		|| exit 32
		) || exit 39
	fi
fi

echo "$prog:	misc installs we need" 1>&2

if ! which xterm >/dev/null
then
    	sudo apt-get install xterm
fi

if ! which 9wm >/dev/null
then
    	sudo apt-get install 9wm
fi

echo "$prog:	helpful tools, the real ffmpeg" 1>&2
(cd src; git clone git://source.ffmpeg.org/ffmpeg.git ffmpeg
	cd ffmpeg
	./configure
	make
	sudo make install
)

echo "$prog:	building slowmovie code" 1>&2

(cd src/surfside;
	make || exit 10
	make install	|| exit 11
)

cat <<!EOF >$HOME/.Xdefaults
xterm*geometry:         90x40
xterm*ttyModes:         intr ^? erase ^H kill ^U eof ^D
xterm*autoRaise:        true
xterm*saveLines:        1024
xterm*scrollBar:        true
xterm*borderWidth:      4
xterm*jumpScroll:       true
xterm*bodyFont:         pelm.latin1.9
xterm*Font:             pelm.latin1.9
xterm*wideFont:         -misc-fixed-medium-r-normal-ja-18-120-100-100-c-180-iso10646-1
xterm*background:       white
xterm*foreground:       black
xterm*waitForMap:       true

*saveUnder:             true
*backingStore:          WhenMapped

sam*Font:               pelm.latin1.9
sam*scrollForwardR:     true
sam*geometry:           800x1024+1110+10
sam*background:         white
sam*foreground:         darkblue

*scrollBar:             True
*scrollbarSize:         left
*saveLines:             600

*ClickToFocus:          True
*AutoRaise:             10
!EOF

cat <<!EOF >$HOME/.xinitrc
userresources=/home/pi/.Xresources
usermodmap=/home/pi/.Xmodmap
sysresources=/usr/local/lib/X11/xinit/.Xresources
sysmodmap=/usr/local/lib/X11/xinit/.Xmodmap

#if [ -f  ]; then
#    xrdb -merge 
#fi
#
#if [ -f  ]; then
#    xmodmap 
#fi

slowclock

9wm -term xterm &

sleep 1         # race condition, lose it
exec /home/pi/bin/surfside
!EOF

cat <<-"!EOF" >$HOME/.bashrc
PLAN9=$HOME/src/plan9port;              export PLAN9
PATH=$PATH:$PLAN9/bin:$HOME/bin;        export PATH

#       slowmovie startup, but only on the console terminal

if [ "`tty 2>/dev/null`" = "/dev/tty1" ]
then
        for i in 1 #  2 #          3 4 5 6 7 8 9 10
        do
                startx
        done
fi
!EOF
